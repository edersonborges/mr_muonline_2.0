
# Projeto de Automação para MU Online

Este projeto consiste em um script de automação para o jogo MU Online, permitindo verificar o nível do personagem e executar comandos automaticamente, como "Master Reset", ao atingir o nível necessário. Inclui uma interface gráfica em Python para configurar a automação de forma intuitiva.

## Funcionalidades

- **Verificação do Nível**: Captura a tela do jogo para identificar o nível atual do personagem e comparar com o nível necessário para a automação.
- **Execução de Comandos**: Ao atingir o nível necessário, executa comandos no jogo, incluindo "Master Reset". Opcionalmente, o comando `/limparinv` é executado para limpar o inventário se a configuração estiver habilitada.
- **Configuração Personalizada via Interface Gráfica**:
  - **Pasta de Screenshots**: Escolha o diretório onde as capturas de tela serão salvas.
  - **Level Necessário**: Defina o nível que o personagem deve atingir para acionar a automação.
  - **Nome da Janela do Jogo**: Especifique o título exato da janela do MU Online, permitindo a execução correta dos comandos na janela desejada.
  - **Intervalo de Verificação**: Defina o intervalo (em segundos) entre cada verificação do nível.
  - **Opção de Limpar Inventário**: Ative ou desative o comando `/limparinv` com uma caixa de seleção.
  - **Contador de Master Resets**: Conta e exibe o número de vezes que o Master Reset foi executado, incluindo o nível verificado.

## Pré-requisitos

- **Python 3.x**
- Bibliotecas necessárias: `tkinter`, `pytesseract`, `Pillow`, `numpy`, `opencv-python`, `pyautogui`, `mss`, `win32gui`, `win32api`, `win32con`.
- **Tesseract OCR**: Instale o Tesseract OCR e configure o caminho corretamente no código para que a automação possa reconhecer o texto do nível.

## Instalação

1. Clone o repositório:
   ```bash
   git clone <URL_DO_REPOSITORIO>
   cd <NOME_DA_PASTA_DO_PROJETO>
   ```

2. Instale as bibliotecas necessárias:
   ```bash
   pip install -r requirements.txt
   ```

3. Instale o Tesseract OCR e configure o caminho no arquivo `interface.py`:
   ```python
   pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'
   ```

## Utilização

1. Execute o script `interface.py` para abrir a interface gráfica:
   ```bash
   python interface.py
   ```

2. Configure os campos na interface:
   - Selecione a pasta de screenshots.
   - Defina o nível necessário, nome da janela do jogo e intervalo de verificação.
   - Escolha a opção de limpar o inventário, se necessário.
   - Clique em "Iniciar Automação".

3. A automação verificará o nível conforme o intervalo especificado e executará os comandos ao atingir o nível necessário.

4. Para parar a automação, clique em "Parar Automação".

## Observações

- **Configurações Salvas**: As configurações da interface são salvas automaticamente e serão carregadas na próxima execução.
- **Logo Personalizada**: Coloque uma imagem `logo.png` ou `logo.jpg` na pasta raiz do projeto para exibição opcional na interface.

## Autor

Desenvolvido por Ed
